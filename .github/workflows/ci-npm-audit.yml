name: ORT Analysis for JavaScript Project

on:
  pull_request:
    paths:
      # todo: skip node_modules
      - '**/**/package.json' # Trigger when package.json changes
      - '**/**/package-lock.json' # Trigger when package.json changes

jobs:
  ort-analysis:
    runs-on: ubuntu-latest

    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Debug GitHub Token Permissions
        run: |
          echo "GitHub Token permissions:"
          echo "${{ toJSON(github.token_permissions) }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for diff check

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: npm install

      - name: Run npm audit
        run: |
          npm audit --dry-run --json > npm-audit-results.json

      - name: Process audit results
        id: audit
        run: |
          vulnerabilities=$(cat npm-audit-results.json)
          if [ -z "$vulnerabilities" ]; then
            vulnerabilities="No vulnerabilities found."
          fi
          echo "vulnerabilities=$vulnerabilities" >> "$GITHUB_ENV"

      - name: Check for New Dependencies
        id: check_new_deps
        run: |
          git fetch origin $GITHUB_BASE_REF
          if git diff --name-only origin/$GITHUB_BASE_REF..HEAD -- package-lock.json | grep 'package-lock.json'; then
            echo "::set-output name=new_deps::true"
          else
            echo "::set-output name=new_deps::false"
          fi

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const vulnerabilities = `${{ env.vulnerabilities }}`;

            let commentBody = `## Results for scanned packages: \n`;
            commentBody += `\n**Changes in dependencies:** ${newDeps ? 'Yes' : 'No'}`;
            commentBody += `\n### Dependencies:\n
              <details><summary>npm audit results</summary>
              <p>

              ```json
                ${vulnerabilities}
              ```

              </p>
              </details>
            `;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });