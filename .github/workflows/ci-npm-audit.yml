name: npm audit analysis

on:
  pull_request:
    paths:
      # todo: skip node_modules
      - '**/**/package.json' # Trigger when package.json changes
      - '**/**/package-lock.json' # Trigger when package.json changes

jobs:
  ort-analysis:
    runs-on: ubuntu-latest

    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Debug GitHub Token Permissions
        run: |
          echo "GitHub Token permissions:"
          echo "${{ toJSON(github.token_permissions) }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for diff check

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: npm install

      - name: Get npm audit results
        run: |
          npm audit --dry-run --json > npm-audit-results.json || true

      - name: Check for New Dependencies
        id: check_new_deps
        run: |
          git fetch origin $GITHUB_BASE_REF
          if git diff --name-only origin/$GITHUB_BASE_REF..HEAD -- package-lock.json | grep 'package-lock.json'; then
            echo "::set-output name=new_deps::true"
          else
            echo "::set-output name=new_deps::false"
          fi

      - name: Process npm audit results
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            let vulnerabilities = [];

            try {
              vulnerabilities = fs.readFileSync("npm-audit-results.json", 'utf8');
              console.log('File content:', vulnerabilities);
            } catch (err) {
              console.error('Error reading file:', err);
            }

            if (vulnerabilities && vulnerabilities.length) {
              let commentBody = `## Results for scanned packages: \n`;
              commentBody += `\n### Changes in dependencies: ${newDeps ? 'Yes' : 'No'} \n`;
              commentBody += `
                <details><summary>npm audit results</summary>
                <p>
              `;
              commentBody += "```json";
              commentBody += `${vulnerabilities}`;
              commentBody += "```json";
              commentBody += `
                </p>
                </details>
              `;

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

      - name: Run npm audit
        run: |
          # make the build fail if npm audit returns vulnerabilities
          npm audit --dry-run
